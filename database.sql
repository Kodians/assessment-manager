----
-- Database: assessment_db
-- Path: database.sql
--
CREATE SCHEMA IF NOT EXISTS assessment_db;

CREATE  TABLE assessment_db."class" ( 
	class_id             integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	class_name           varchar(255),
	class_code           varchar(50) NOT NULL,
	class_description    text,
	CONSTRAINT pk_class PRIMARY KEY ( class_id ),
	CONSTRAINT unq_class_code UNIQUE ( class_code ) 
 );

CREATE  TABLE assessment_db."user" ( 
	user_id              integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	user_active          boolean,
	user_login           varchar(255) NOT NULL,
	user_password        varchar(255) NOT NULL,
	user_firstname       varchar(100),
	user_lastname        varchar(100),
	user_createddate     timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,
	user_lastlogin       timestamp,
	class_id             integer,
	user_role            varchar(50) NOT NULL,
	user_token           varchar(255),
	user_token_expiration timestamp,
	CONSTRAINT pk_student PRIMARY KEY ( user_id ),
	CONSTRAINT unq_student_numb UNIQUE ( user_login ) 
 );

CREATE  TABLE assessment_db.assessment ( 
	assessment_id integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY  ,
	assessment_name varchar(100),
	assessment_description text,
	assessment_createdby integer NOT NULL,
	assessment_createddate timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,
	assessment_modifieddate timestamp,
	CONSTRAINT unq_assessment_assessment_id UNIQUE ( assessment_id ) 
 );

CREATE  TABLE assessment_db.assessment_question ( 
	assessment_question_id integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	assessment_question_active boolean NOT NULL,
	assessment_question_type varchar(50) NOT NULL,
	assessment_question_content text  NOT NULL,
	assessment_question_helpmessage text,
	assessment_question_picture varchar(255),
	assessment_question_coefficient NUMERIC(5, 2) DEFAULT 1 NOT NULL,
	assessment_question_maxpoint NUMERIC(5, 2) DEFAULT 1 NOT NULL,
	assessment_id integer NOT NULL,
	CONSTRAINT pk_assessment_question PRIMARY KEY ( assessment_question_id )
 );

CREATE  TABLE assessment_db."module" ( 
	module_id integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	module_name varchar(255)  NOT NULL,
	module_description text,
	module_createdby integer NOT NULL,
	CONSTRAINT pk_module_id PRIMARY KEY ( module_id )
 );

CREATE  TABLE assessment_db.participant ( 
	participant_id integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	participant_start timestamp,
	participant_end timestamp,
	participant_score NUMERIC(5, 2),
	assessment_id integer  NOT NULL,
	user_id integer  NOT NULL,
	participant_iscorrected boolean  NOT NULL,
	participant_bonus NUMERIC(5, 2),
	CONSTRAINT pk_participant PRIMARY KEY ( participant_id )
 );

CREATE  TABLE assessment_db.assessment_answer ( 
	assessment_answer_id integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY  ,
	assessment_answer_correct boolean,
	assessment_answer_active boolean,
	assessment_answer_content text,
	assessment_answer_picture varchar(255),
	assessment_question_id integer NOT NULL,
	CONSTRAINT pk_assessment_answer PRIMARY KEY ( assessment_answer_id )
 );

CREATE  TABLE assessment_db.class_module ( 
	class_module_id integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	class_id integer  NOT NULL,
	module_id integer  NOT NULL,
	CONSTRAINT pk_group_module_id PRIMARY KEY ( class_module_id )
 );

CREATE UNIQUE INDEX unq_group_module ON assessment_db.class_module ( class_id );

CREATE  TABLE assessment_db.participant_answer ( 
	participant_answer_id integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY  ,
	participant_answer_content text,
	participant_answer_score integer,
	assessment_question_id integer  NOT NULL,
	assessment_answer_id integer,
	participant_id integer NOT NULL,
	CONSTRAINT pk_participant_answer PRIMARY KEY(participant_answer_id)
 );

CREATE  TABLE assessment_db.shared_assessment ( 
	shared_assessment_id integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY  ,
	shared_assessment_start timestamp  NOT NULL,
	shared_assessment_end timestamp  NOT NULL,
	class_module_id integer  NOT NULL,
	assessment_id integer  NOT NULL,
	CONSTRAINT pk_shared_assessment PRIMARY KEY ( shared_assessment_id )
 );

ALTER TABLE assessment_db.assessment ADD CONSTRAINT fk_assessment_user FOREIGN KEY ( assessment_createdby ) REFERENCES assessment_db."user"( user_id ) ON DELETE CASCADE;

ALTER TABLE assessment_db.assessment_answer ADD CONSTRAINT fk_assessment_answer_assessment_question_id FOREIGN KEY ( assessment_question_id ) REFERENCES assessment_db.assessment_question( assessment_question_id ) ON DELETE CASCADE;

ALTER TABLE assessment_db.assessment_question ADD CONSTRAINT fk_assessment_question_assessment_id FOREIGN KEY ( assessment_id ) REFERENCES assessment_db.assessment( assessment_id ) ON DELETE CASCADE;

ALTER TABLE assessment_db.class_module ADD CONSTRAINT fk_class_module_id_class FOREIGN KEY ( class_id ) REFERENCES assessment_db."class"( class_id ) ON DELETE CASCADE;

ALTER TABLE assessment_db.class_module ADD CONSTRAINT fk_class_module_module FOREIGN KEY ( module_id ) REFERENCES assessment_db."module"( module_id ) ON DELETE CASCADE;

ALTER TABLE assessment_db."module" ADD CONSTRAINT fk_module_user FOREIGN KEY ( module_createdby ) REFERENCES assessment_db."user"( user_id )  ON DELETE CASCADE;

ALTER TABLE assessment_db.participant ADD CONSTRAINT fk_participant_student FOREIGN KEY ( user_id ) REFERENCES assessment_db."user"( user_id ) ON DELETE CASCADE;

ALTER TABLE assessment_db.participant ADD CONSTRAINT fk_participant_assessment FOREIGN KEY ( assessment_id ) REFERENCES assessment_db.assessment( assessment_id ) ON DELETE CASCADE;

ALTER TABLE assessment_db.participant_answer ADD CONSTRAINT fk_participant_answer FOREIGN KEY ( participant_id ) REFERENCES assessment_db.participant( participant_id ) ON DELETE CASCADE;

ALTER TABLE assessment_db.participant_answer ADD CONSTRAINT fk_participant_answer_assessment_answer_id FOREIGN KEY ( assessment_answer_id ) REFERENCES assessment_db.assessment_answer( assessment_answer_id ) ON DELETE CASCADE;

ALTER TABLE assessment_db.participant_answer ADD CONSTRAINT fk_participant_answer_assessment_question_id FOREIGN KEY ( assessment_question_id ) REFERENCES assessment_db.assessment_question( assessment_question_id ) ON DELETE CASCADE;

ALTER TABLE assessment_db.shared_assessment ADD CONSTRAINT fk_shared_assessment_group_module_id FOREIGN KEY ( class_module_id ) REFERENCES assessment_db.class_module( class_module_id ) ON DELETE CASCADE;

ALTER TABLE assessment_db.shared_assessment ADD CONSTRAINT fk_shared_assessment_assessment_id FOREIGN KEY ( assessment_id ) REFERENCES assessment_db.assessment( assessment_id ) ON DELETE CASCADE;

ALTER TABLE assessment_db."user" ADD CONSTRAINT fk_group_id FOREIGN KEY ( class_id ) REFERENCES assessment_db."class"( class_id ) ON DELETE CASCADE;
